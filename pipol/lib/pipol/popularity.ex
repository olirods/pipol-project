defmodule Pipol.Popularity do
  alias Pipol.Person

  def ranking do
    HTTPoison.get!("http://popularity-tracker:5000/people/ranking", [], recv_timeout: 50_000)
    |> Map.get(:body, [])
    |> Jason.decode!()
    |> Enum.map(fn %{"name" => name, "why" => why} ->
      %Person{id: :rand.uniform(1_000), name: name, popular: {true, why}}
    end)
  end

  def history(_person) do
    %{
      1_557_619_200_000 => 19,
      1_558_224_000_000 => 18,
      1_558_828_800_000 => 21,
      1_559_433_600_000 => 22,
      1_560_038_400_000 => 27,
      1_560_643_200_000 => 25,
      1_561_248_000_000 => 41,
      1_561_852_800_000 => 33,
      1_562_457_600_000 => 36,
      1_563_062_400_000 => 31,
      1_563_667_200_000 => 27,
      1_564_272_000_000 => 22,
      1_564_876_800_000 => 23,
      1_565_481_600_000 => 25,
      1_566_086_400_000 => 31,
      1_566_691_200_000 => 58,
      1_567_296_000_000 => 100,
      1_567_900_800_000 => 58,
      1_568_505_600_000 => 30,
      1_569_110_400_000 => 31,
      1_569_715_200_000 => 33,
      1_570_320_000_000 => 26,
      1_570_924_800_000 => 20,
      1_571_529_600_000 => 18,
      1_572_134_400_000 => 22,
      1_572_739_200_000 => 26,
      1_573_344_000_000 => 27,
      1_573_948_800_000 => 26,
      1_574_553_600_000 => 28,
      1_575_158_400_000 => 32,
      1_575_763_200_000 => 33,
      1_576_368_000_000 => 46,
      1_576_972_800_000 => 44,
      1_577_577_600_000 => 40,
      1_578_182_400_000 => 40,
      1_578_787_200_000 => 32,
      1_579_392_000_000 => 23,
      1_579_996_800_000 => 63,
      1_580_601_600_000 => 32,
      1_581_206_400_000 => 49,
      1_581_811_200_000 => 37,
      1_582_416_000_000 => 24,
      1_583_020_800_000 => 23,
      1_583_625_600_000 => 48,
      1_584_230_400_000 => 24,
      1_584_835_200_000 => 20,
      1_585_440_000_000 => 24,
      1_586_044_800_000 => 20,
      1_586_649_600_000 => 21,
      1_587_254_400_000 => 21,
      1_587_859_200_000 => 17,
      1_588_464_000_000 => 15,
      1_589_068_800_000 => 15,
      1_589_673_600_000 => 15,
      1_590_278_400_000 => 17,
      1_590_883_200_000 => 15,
      1_591_488_000_000 => 13,
      1_592_092_800_000 => 14,
      1_592_697_600_000 => 13,
      1_593_302_400_000 => 14,
      1_593_907_200_000 => 14,
      1_594_512_000_000 => 14,
      1_595_116_800_000 => 14,
      1_595_721_600_000 => 21,
      1_596_326_400_000 => 18,
      1_596_931_200_000 => 16,
      1_597_536_000_000 => 17,
      1_598_140_800_000 => 15,
      1_598_745_600_000 => 14,
      1_599_350_400_000 => 15,
      1_599_955_200_000 => 17,
      1_600_560_000_000 => 16,
      1_601_164_800_000 => 15,
      1_601_769_600_000 => 14,
      1_602_374_400_000 => 26,
      1_602_979_200_000 => 19,
      1_603_584_000_000 => 13,
      1_604_188_800_000 => 15,
      1_604_793_600_000 => 21,
      1_605_398_400_000 => 17,
      1_606_003_200_000 => 18,
      1_606_608_000_000 => 19,
      1_607_212_800_000 => 16,
      1_607_817_600_000 => 19,
      1_608_422_400_000 => 18,
      1_609_027_200_000 => 17,
      1_609_632_000_000 => 14,
      1_610_236_800_000 => 14,
      1_610_841_600_000 => 32,
      1_611_446_400_000 => 19,
      1_612_051_200_000 => 13,
      1_612_656_000_000 => 12,
      1_613_260_800_000 => 11,
      1_613_865_600_000 => 15,
      1_614_470_400_000 => 13,
      1_615_075_200_000 => 13,
      1_615_680_000_000 => 22,
      1_616_284_800_000 => 12,
      1_616_889_600_000 => 15,
      1_617_494_400_000 => 12,
      1_618_099_200_000 => 10,
      1_618_704_000_000 => 10,
      1_619_308_800_000 => 16,
      1_619_913_600_000 => 31,
      1_620_518_400_000 => 14,
      1_621_123_200_000 => 14,
      1_621_728_000_000 => 12,
      1_622_332_800_000 => 16,
      1_622_937_600_000 => 16,
      1_623_542_400_000 => 16,
      1_624_147_200_000 => 14,
      1_624_752_000_000 => 9,
      1_625_356_800_000 => 12,
      1_625_961_600_000 => 12,
      1_626_566_400_000 => 10,
      1_627_171_200_000 => 17,
      1_627_776_000_000 => 18,
      1_628_380_800_000 => 14,
      1_628_985_600_000 => 12,
      1_629_590_400_000 => 12,
      1_630_195_200_000 => 12,
      1_630_800_000_000 => 12,
      1_631_404_800_000 => 21,
      1_632_009_600_000 => 13,
      1_632_614_400_000 => 21,
      1_633_219_200_000 => 13,
      1_633_824_000_000 => 12,
      1_634_428_800_000 => 10,
      1_635_033_600_000 => 10,
      1_635_638_400_000 => 8,
      1_636_243_200_000 => 11,
      1_636_848_000_000 => 9,
      1_637_452_800_000 => 9,
      1_638_057_600_000 => 9,
      1_638_662_400_000 => 12,
      1_639_267_200_000 => 18,
      1_639_872_000_000 => 16,
      1_640_476_800_000 => 12,
      1_641_081_600_000 => 11,
      1_641_686_400_000 => 9,
      1_642_291_200_000 => 7,
      1_642_896_000_000 => 7,
      1_643_500_800_000 => 8,
      1_644_105_600_000 => 9,
      1_644_710_400_000 => 9,
      1_645_315_200_000 => 8,
      1_645_920_000_000 => 7,
      1_646_524_800_000 => 7
    }
    |> Enum.map(fn {k, v} ->
      {
        DateTime.from_unix!(k, :millisecond) |> DateTime.to_date,
        v
      }
    end)
    |> Enum.into(%{})
  end
end
